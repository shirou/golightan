package lexer

import (
	sqlite "github.com/shirou/antlr-grammars-v4-go/sqlite"

	"github.com/shirou/golightan"
)

func NewSQLiteTokenMap() TokenMap {
	return TokenMap{
		symbolicMap: newSQLiteSymbolicMap(),
		ruleMap:     newSQLiteRuleMap(),
	}
}

func newSQLiteRuleMap() RuleMap {
	return RuleMap{
		Rule{sqlite.SQLiteParserRULE_sql_stmt_list,
			sqlite.SQLiteParserSCOL}: golightan.TokenTypePunctuation,
	}
}

func newSQLiteSymbolicMap() TypeMap {
	return TypeMap{
		sqlite.SQLiteParserSCOL:                golightan.TokenTypeText,
		sqlite.SQLiteParserDOT:                 golightan.TokenTypeText,
		sqlite.SQLiteParserOPEN_PAR:            golightan.TokenTypePunctuation,
		sqlite.SQLiteParserCLOSE_PAR:           golightan.TokenTypePunctuation,
		sqlite.SQLiteParserCOMMA:               golightan.TokenTypePunctuation,
		sqlite.SQLiteParserASSIGN:              golightan.TokenTypeText,
		sqlite.SQLiteParserSTAR:                golightan.TokenTypeOperator,
		sqlite.SQLiteParserPLUS:                golightan.TokenTypeOperator,
		sqlite.SQLiteParserMINUS:               golightan.TokenTypeOperator,
		sqlite.SQLiteParserTILDE:               golightan.TokenTypeText,
		sqlite.SQLiteParserPIPE2:               golightan.TokenTypeText,
		sqlite.SQLiteParserDIV:                 golightan.TokenTypeOperator,
		sqlite.SQLiteParserMOD:                 golightan.TokenTypeOperator,
		sqlite.SQLiteParserLT2:                 golightan.TokenTypeText,
		sqlite.SQLiteParserGT2:                 golightan.TokenTypeText,
		sqlite.SQLiteParserAMP:                 golightan.TokenTypeText,
		sqlite.SQLiteParserPIPE:                golightan.TokenTypeText,
		sqlite.SQLiteParserLT:                  golightan.TokenTypeOperator,
		sqlite.SQLiteParserLT_EQ:               golightan.TokenTypeOperator,
		sqlite.SQLiteParserGT:                  golightan.TokenTypeOperator,
		sqlite.SQLiteParserGT_EQ:               golightan.TokenTypeOperator,
		sqlite.SQLiteParserEQ:                  golightan.TokenTypeOperator,
		sqlite.SQLiteParserNOT_EQ1:             golightan.TokenTypeOperator,
		sqlite.SQLiteParserNOT_EQ2:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_ABORT:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_ACTION:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_ADD:               golightan.TokenTypeText,
		sqlite.SQLiteParserK_AFTER:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_ALL:               golightan.TokenTypeText,
		sqlite.SQLiteParserK_ALTER:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_ANALYZE:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_AND:               golightan.TokenTypeText,
		sqlite.SQLiteParserK_AS:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_ASC:               golightan.TokenTypeText,
		sqlite.SQLiteParserK_ATTACH:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_AUTOINCREMENT:     golightan.TokenTypeText,
		sqlite.SQLiteParserK_BEFORE:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_BEGIN:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_BETWEEN:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_BY:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_CASCADE:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_CASE:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_CAST:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_CHECK:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_COLLATE:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_COLUMN:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_COMMIT:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_CONFLICT:          golightan.TokenTypeText,
		sqlite.SQLiteParserK_CONSTRAINT:        golightan.TokenTypeText,
		sqlite.SQLiteParserK_CREATE:            golightan.TokenTypeKeyword,
		sqlite.SQLiteParserK_CROSS:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_CURRENT_DATE:      golightan.TokenTypeText,
		sqlite.SQLiteParserK_CURRENT_TIME:      golightan.TokenTypeText,
		sqlite.SQLiteParserK_CURRENT_TIMESTAMP: golightan.TokenTypeText,
		sqlite.SQLiteParserK_DATABASE:          golightan.TokenTypeKeyword,
		sqlite.SQLiteParserK_DEFAULT:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_DEFERRABLE:        golightan.TokenTypeText,
		sqlite.SQLiteParserK_DEFERRED:          golightan.TokenTypeText,
		sqlite.SQLiteParserK_DELETE:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_DESC:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_DETACH:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_DISTINCT:          golightan.TokenTypeText,
		sqlite.SQLiteParserK_DROP:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_EACH:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_ELSE:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_END:               golightan.TokenTypeText,
		sqlite.SQLiteParserK_ESCAPE:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_EXCEPT:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_EXCLUSIVE:         golightan.TokenTypeText,
		sqlite.SQLiteParserK_EXISTS:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_EXPLAIN:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_FAIL:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_FOR:               golightan.TokenTypeText,
		sqlite.SQLiteParserK_FOREIGN:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_FROM:              golightan.TokenTypeKeyword,
		sqlite.SQLiteParserK_FULL:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_GLOB:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_GROUP:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_HAVING:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_IF:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_IGNORE:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_IMMEDIATE:         golightan.TokenTypeText,
		sqlite.SQLiteParserK_IN:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_INDEX:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_INDEXED:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_INITIALLY:         golightan.TokenTypeText,
		sqlite.SQLiteParserK_INNER:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_INSERT:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_INSTEAD:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_INTERSECT:         golightan.TokenTypeText,
		sqlite.SQLiteParserK_INTO:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_IS:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_ISNULL:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_JOIN:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_KEY:               golightan.TokenTypeKeyword,
		sqlite.SQLiteParserK_LEFT:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_LIKE:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_LIMIT:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_MATCH:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_NATURAL:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_NO:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_NOT:               golightan.TokenTypeOperatorWord,
		sqlite.SQLiteParserK_NOTNULL:           golightan.TokenTypeOperatorWord,
		sqlite.SQLiteParserK_NULL:              golightan.TokenTypeKeyword,
		sqlite.SQLiteParserK_OF:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_OFFSET:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_ON:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_OR:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_ORDER:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_OUTER:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_PLAN:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_PRAGMA:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_PRIMARY:           golightan.TokenTypeKeyword,
		sqlite.SQLiteParserK_QUERY:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_RAISE:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_RECURSIVE:         golightan.TokenTypeText,
		sqlite.SQLiteParserK_REFERENCES:        golightan.TokenTypeText,
		sqlite.SQLiteParserK_REGEXP:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_REINDEX:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_RELEASE:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_RENAME:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_REPLACE:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_RESTRICT:          golightan.TokenTypeText,
		sqlite.SQLiteParserK_RIGHT:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_ROLLBACK:          golightan.TokenTypeText,
		sqlite.SQLiteParserK_ROW:               golightan.TokenTypeText,
		sqlite.SQLiteParserK_SAVEPOINT:         golightan.TokenTypeText,
		sqlite.SQLiteParserK_SELECT:            golightan.TokenTypeKeyword,
		sqlite.SQLiteParserK_SET:               golightan.TokenTypeText,
		sqlite.SQLiteParserK_TABLE:             golightan.TokenTypeNameClass,
		sqlite.SQLiteParserK_TEMP:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_TEMPORARY:         golightan.TokenTypeText,
		sqlite.SQLiteParserK_THEN:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_TO:                golightan.TokenTypeText,
		sqlite.SQLiteParserK_TRANSACTION:       golightan.TokenTypeText,
		sqlite.SQLiteParserK_TRIGGER:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_UNION:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_UNIQUE:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_UPDATE:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_USING:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_VACUUM:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_VALUES:            golightan.TokenTypeText,
		sqlite.SQLiteParserK_VIEW:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_VIRTUAL:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_WHEN:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_WHERE:             golightan.TokenTypeText,
		sqlite.SQLiteParserK_WITH:              golightan.TokenTypeText,
		sqlite.SQLiteParserK_WITHOUT:           golightan.TokenTypeText,
		sqlite.SQLiteParserK_TEXT:              golightan.TokenTypeNameClass,
		sqlite.SQLiteParserK_INT:               golightan.TokenTypeNameClass,
		sqlite.SQLiteParserK_INTEGER:           golightan.TokenTypeNameClass,
		sqlite.SQLiteParserK_CHAR:              golightan.TokenTypeNameClass,
		sqlite.SQLiteParserK_REAL:              golightan.TokenTypeNameClass,
		sqlite.SQLiteParserK_BLOB:              golightan.TokenTypeNameClass,
		sqlite.SQLiteParserIDENTIFIER:          golightan.TokenTypeName,
		sqlite.SQLiteParserNUMERIC_LITERAL:     golightan.TokenTypeText,
		sqlite.SQLiteParserBIND_PARAMETER:      golightan.TokenTypeText,
		sqlite.SQLiteParserSTRING_LITERAL:      golightan.TokenTypeText,
		sqlite.SQLiteParserBLOB_LITERAL:        golightan.TokenTypeText,
		sqlite.SQLiteParserSINGLE_LINE_COMMENT: golightan.TokenTypeText,
		sqlite.SQLiteParserMULTILINE_COMMENT:   golightan.TokenTypeText,
		sqlite.SQLiteParserSPACES:              golightan.TokenTypeWhitespace,
		sqlite.SQLiteParserUNEXPECTED_CHAR:     golightan.TokenTypeText,
	}
}
